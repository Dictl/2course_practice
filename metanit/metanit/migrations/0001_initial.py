# Generated by Django 5.2 on 2025-05-20 22:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('warranty_months', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ComponentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'componentcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ff', models.CharField(blank=True, max_length=10, null=True, unique=True)),
            ],
            options={
                'db_table': 'formfactor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GamingPc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_name', models.CharField(max_length=50)),
                ('balanced_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('cpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('gpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('ram_memory_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
            ],
            options={
                'db_table': 'gaming_pc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IncompatibleComponents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'incompatiblecomponents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'manufacturer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MultimediaPc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_name', models.CharField(max_length=50)),
                ('balanced_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('cpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('gpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('ram_memory_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
            ],
            options={
                'db_table': 'multimedia_pc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OfficePc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_name', models.CharField(max_length=50)),
                ('balanced_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('cpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('gpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('ram_memory_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
            ],
            options={
                'db_table': 'office_pc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workstation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_name', models.CharField(max_length=50)),
                ('balanced_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('cpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('gpu_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
                ('ram_memory_priority_coefficient', models.DecimalField(decimal_places=1, max_digits=2)),
            ],
            options={
                'db_table': 'workstation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('cores', models.IntegerField()),
                ('threads', models.IntegerField()),
                ('clock_speed', models.DecimalField(decimal_places=2, max_digits=5)),
                ('socket', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'cpu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('vram', models.IntegerField()),
                ('memory_type', models.CharField(max_length=20)),
                ('power_consumption', models.IntegerField()),
            ],
            options={
                'db_table': 'gpu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('capacity', models.IntegerField()),
                ('form_factor', models.CharField(max_length=20)),
                ('rotation_speed', models.IntegerField()),
                ('interface', models.CharField(max_length=10)),
                ('speed', models.IntegerField()),
                ('cache_size', models.IntegerField()),
                ('durability', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'hdd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('cpu_socket', models.CharField(max_length=20)),
                ('chipset', models.CharField(max_length=20)),
                ('ram_socket', models.CharField(max_length=20)),
                ('expansion_slots', models.CharField(max_length=50)),
                ('interface', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'motherboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PCCase',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('dimensions', models.CharField(max_length=50)),
                ('weight', models.FloatField()),
                ('color', models.CharField(max_length=20)),
                ('psu_form_factor', models.CharField(max_length=20)),
                ('max_gpu_length', models.IntegerField()),
                ('max_cpu_cooler_height', models.IntegerField()),
                ('horizontal_expansion_slots_amount', models.IntegerField()),
                ('two_p_five_drives_amount', models.IntegerField()),
                ('three_p_five_drives_amount', models.IntegerField()),
                ('fans_included', models.CharField(max_length=50)),
                ('frontal_fan_support', models.CharField(max_length=50)),
                ('rear_fan_support', models.CharField(max_length=50)),
                ('upper_fan_support', models.CharField(max_length=50)),
                ('bottom_fan_support', models.CharField(max_length=50)),
                ('side_fan_support', models.CharField(max_length=50)),
                ('io_panel_loc', models.CharField(max_length=20)),
                ('connectors', models.CharField(max_length=255)),
                ('max_form_factor', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'pc_case',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('psu_power', models.IntegerField()),
                ('certification', models.CharField(max_length=10)),
                ('modularity', models.BooleanField(blank=True, null=True)),
                ('protection', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'psu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('capacity', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('latency', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ram',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('capacity', models.IntegerField()),
                ('ssd_type', models.CharField(max_length=20)),
                ('form_factor', models.CharField(max_length=10)),
                ('speed', models.IntegerField()),
                ('tbw', models.IntegerField()),
                ('controller', models.CharField(max_length=20)),
                ('memory', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ssd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colingsystem',
            fields=[
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='metanit.component')),
                ('tdp', models.IntegerField()),
                ('fan_amount', models.IntegerField()),
                ('fan_size', models.IntegerField()),
                ('rpm_min', models.IntegerField()),
                ('heat_pipes_amount', models.IntegerField()),
                ('radiator_material', models.CharField(max_length=100)),
                ('sockets', models.CharField(max_length=255)),
                ('rpm_max', models.IntegerField()),
                ('dimensions', models.CharField(max_length=50)),
                ('max_noise', models.FloatField()),
                ('base_material', models.CharField(max_length=100)),
                ('rated_current', models.FloatField()),
                ('rated_voltage', models.FloatField()),
            ],
            options={
                'db_table': 'colingsystem',
            },
        ),
    ]
